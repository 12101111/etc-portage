From b104cce6067c75dd8c91005191c95c2c8c95b16d Mon Sep 17 00:00:00 2001
From: 12101111 <w12101111@gmail.com>
Date: Sun, 26 Sep 2021 13:48:56 +0800
Subject: [PATCH 3/3] Revert "util/shm: add allocate_shm_file_pair"

This reverts commit 55ca93469cfaa5ca1d9b6e4c164b23ef55763eb5.
---
 include/util/shm.h |  3 ---
 util/shm.c         | 44 +++++---------------------------------------
 2 files changed, 5 insertions(+), 42 deletions(-)

diff --git a/include/util/shm.h b/include/util/shm.h
index 331532fc..fb67b711 100644
--- a/include/util/shm.h
+++ b/include/util/shm.h
@@ -1,10 +1,7 @@
 #ifndef UTIL_SHM_H
 #define UTIL_SHM_H
 
-#include <stdbool.h>
-
 int create_shm_file(void);
 int allocate_shm_file(size_t size);
-bool allocate_shm_file_pair(size_t size, int *rw_fd, int *ro_fd);
 
 #endif
diff --git a/util/shm.c b/util/shm.c
index e0d84e8e..f7c7303e 100644
--- a/util/shm.c
+++ b/util/shm.c
@@ -8,8 +8,6 @@
 #include <wlr/config.h>
 #include "util/shm.h"
 
-#define RANDNAME_PATTERN "/wlroots-XXXXXX"
-
 static void randname(char *buf) {
 	struct timespec ts;
 	clock_gettime(CLOCK_REALTIME, &ts);
@@ -20,15 +18,17 @@ static void randname(char *buf) {
 	}
 }
 
-static int excl_shm_open(char *name) {
+int create_shm_file(void) {
 	int retries = 100;
 	do {
-		randname(name + strlen(RANDNAME_PATTERN) - 6);
+		char name[] = "/wlroots-XXXXXX";
+		randname(name + strlen(name) - 6);
 
 		--retries;
 		// CLOEXEC is guaranteed to be set by shm_open
 		int fd = shm_open(name, O_RDWR | O_CREAT | O_EXCL, 0600);
 		if (fd >= 0) {
+			shm_unlink(name);
 			return fd;
 		}
 	} while (retries > 0 && errno == EEXIST);
@@ -37,12 +37,10 @@ static int excl_shm_open(char *name) {
 }
 
 int allocate_shm_file(size_t size) {
-	char name[] = RANDNAME_PATTERN;
-	int fd = excl_shm_open(name);
+	int fd = create_shm_file();
 	if (fd < 0) {
 		return -1;
 	}
-	shm_unlink(name);
 
 	int ret;
 	do {
@@ -55,35 +53,3 @@ int allocate_shm_file(size_t size) {
 
 	return fd;
 }
-
-bool allocate_shm_file_pair(size_t size, int *rw_fd_ptr, int *ro_fd_ptr) {
-	char name[] = RANDNAME_PATTERN;
-	int rw_fd = excl_shm_open(name);
-	if (rw_fd < 0) {
-		return false;
-	}
-
-	// CLOEXEC is guaranteed to be set by shm_open
-	int ro_fd = shm_open(name, O_RDONLY, 0);
-	if (ro_fd < 0) {
-		shm_unlink(name);
-		close(rw_fd);
-		return false;
-	}
-
-	shm_unlink(name);
-
-	int ret;
-	do {
-		ret = ftruncate(rw_fd, size);
-	} while (ret < 0 && errno == EINTR);
-	if (ret < 0) {
-		close(rw_fd);
-		close(ro_fd);
-		return false;
-	}
-
-	*rw_fd_ptr = rw_fd;
-	*ro_fd_ptr = ro_fd;
-	return true;
-}
-- 
2.33.0

